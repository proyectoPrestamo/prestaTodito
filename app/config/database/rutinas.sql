-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `ambientes`
--

CREATE TABLE `ambientes` (
  `ID_AMBIENTES` int(11) NOT NULL,
  `CANT_SILLAS` int(3) DEFAULT NULL,
  `CANT_MESAS` int(3) DEFAULT NULL,
  `NUM_APRENDICES` int(3) DEFAULT NULL,
  `NUM_EQUIPOS` int(3) DEFAULT NULL,
  `ID_HERRAMIENTA` int(11) DEFAULT NULL,
  `ID_HORARIO` int(11) DEFAULT NULL,
  `ID_MATERIAL` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;


-- --------------------------------------------------------
DELIMITER //

CREATE PROCEDURE spFindAllAmbientes()
BEGIN
    SELECT ID_AMBIENTES, CANT_SILLAS, CANT_MESAS, NUM_APRENDICES, NUM_EQUIPOS, ID_HERRAMIENTA, ID_HORARIO, ID_MATERIAL
    FROM ambientes;
END //

DELIMITER ;
DELIMITER //

CREATE PROCEDURE spFindAmbientes(IN _ID_AMBIENTES INT)
BEGIN
    SELECT ID_AMBIENTES, CANT_SILLAS, CANT_MESAS, NUM_APRENDICES, NUM_EQUIPOS, ID_HERRAMIENTA, ID_HORARIO, ID_MATERIAL
    FROM ambientes
    WHERE ID_AMBIENTES = _ID_AMBIENTES;
END //

DELIMITER ;
DELIMITER //

CREATE PROCEDURE spInsertAmbientes(
    IN _ID_AMBIENTES INT,
    IN _CANT_SILLAS INT,
    IN _CANT_MESAS INT,
    IN _NUM_APRENDICES INT,
    IN _NUM_EQUIPOS INT,
    IN _ID_HERRAMIENTA INT,
    IN _ID_HORARIO INT,
    IN _ID_MATERIAL INT
)
BEGIN
    INSERT INTO ambientes (ID_AMBIENTES, CANT_SILLAS, CANT_MESAS, NUM_APRENDICES, NUM_EQUIPOS, ID_HERRAMIENTA, ID_HORARIO, ID_MATERIAL)
    VALUES (_ID_AMBIENTES, _CANT_SILLAS, _CANT_MESAS, _NUM_APRENDICES, _NUM_EQUIPOS, _ID_HERRAMIENTA, _ID_HORARIO, _ID_MATERIAL);
END //

DELIMITER ;
DELIMITER //

CREATE PROCEDURE spUpdateAmbientes(
    IN _ID_AMBIENTES INT,
    IN _CANT_SILLAS INT,
    IN _CANT_MESAS INT,
    IN _NUM_APRENDICES INT,
    IN _NUM_EQUIPOS INT,
    IN _ID_HERRAMIENTA INT,
    IN _ID_HORARIO INT,
    IN _ID_MATERIAL INT
)
BEGIN
    UPDATE ambientes
    SET CANT_SILLAS = _CANT_SILLAS, CANT_MESAS = _CANT_MESAS, NUM_APRENDICES = _NUM_APRENDICES, NUM_EQUIPOS = _NUM_EQUIPOS,
        ID_HERRAMIENTA = _ID_HERRAMIENTA, ID_HORARIO = _ID_HORARIO, ID_MATERIAL = _ID_MATERIAL
    WHERE ID_AMBIENTES = _ID_AMBIENTES;
END //

DELIMITER ;
DELIMITER //

CREATE PROCEDURE spDeleteAmbientes(IN _ID_AMBIENTES INT)
BEGIN
    DELETE FROM ambientes
    WHERE ID_AMBIENTES = _ID_AMBIENTES;
END //

DELIMITER ;
--
-- Estructura de tabla para la tabla `computadores`
--

CREATE TABLE `computadores` (
  `ID_PC` int(11) NOT NULL,
  `ESTADO` varchar(10) DEFAULT NULL,
  `MARCA` varchar(30) DEFAULT NULL,
  `ID_HORARIO` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

-- --------------------------------------------------------
DELIMITER $$
CREATE  PROCEDURE spFindAllPc()
BEGIN
    SELECT ID_PC, ESTADO, MARCA, ID_HORARIO FROM computadores;
END$$
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spFindPc(IN _ID_PC INT)
BEGIN
    SELECT ID_PC, ESTADO, MARCA, ID_HORARIO FROM computadores WHERE ID_PC = _ID_PC;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE spInserPc(IN  _ID_PC INT, IN _ESTADO VARCHAR(10), IN _MARCA VARCHAR(30), IN _ID_HORARIO INT)
BEGIN
    INSERT INTO computadores (ID_PC, ESTADO, MARCA, ID_HORARIO)
    VALUES ( _ID_PC,  _ESTADO, _MARCA, _ID_HORARIO);
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spUpdatePC(IN _ID_PC INT, IN _ESTADO VARCHAR(10), IN _MARCA VARCHAR(30), IN _ID_HORARIO INT)
BEGIN
    UPDATE computadores
    SET ESTADO = _ESTADO, MARCA = _MARCA, ID_HORARIO = _ID_HORARIO
    WHERE ID_PC = _ID_PC;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spDeletePc(IN _ID_PC INT)
BEGIN
    DELETE FROM computadores WHERE ID_PC = _ID_PC;
END //
DELIMITER ;


--
-- Estructura de tabla para la tabla `funcionesrol`
--

CREATE TABLE `funcionesrol` (
  `ID_FUNCIONES` int(11) NOT NULL,
  `ESTADO_PRESTAMO` varchar(10) DEFAULT NULL,
  `OBSERVACION_PRESTAMO` varchar(100) DEFAULT NULL,
  `ID_ROL` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

-- --------------------------------------------------------
DELIMITER //
CREATE PROCEDURE spFindAllRol()
BEGIN
    SELECT ID_FUNCIONES, ESTADO_PRESTAMO, OBSERVACION_PRESTAMO, ID_ROL FROM funcionesrol;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spFindRol(IN _IDFUNCIONES INT)
BEGIN
    SELECT ID_FUNCIONES, ESTADO_PRESTAMO, OBSERVACION_PRESTAMO, ID_ROL FROM funcionesrol WHERE ID_FUNCIONES = _ID_FUNCIONES;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spInsertFuncionesRol(IN _IDFUNCIONES INT, IN _ESTADO_PRESTAMO VARCHAR(10), IN _OBSERVACION_PRESTAMO VARCHAR(100), IN _ID_ROL INT)
BEGIN
    INSERT INTO funcionesrol (ID_FUNCIONES, ESTADO_PRESTAMO, OBSERVACION_PRESTAMO, ID_ROL)
    VALUES (_ID_FUNCIONES, _ESTADO_PRESTAMO, _OBSERVACION_PRESTAMO, _ID_ROL);
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spUpdateFuncionesRol(IN _IDFUNCIONES INT, IN _ESTADO_PRESTAMO VARCHAR(10), IN _OBSERVACION_PRESTAMO VARCHAR(100), IN _ID_ROL INT)
BEGIN
    UPDATE funcionesrol
    SET ESTADO_PRESTAMO = _ESTADO_PRESTAMO, OBSERVACION_PRESTAMO = _OBSERVACION_PRESTAMO, ID_ROL = _ID_ROL
    WHERE ID_FUNCIONES = _ID_FUNCIONES;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spDeleteFuncionesRol(IN _IDFUNCIONES INT)
BEGIN
    DELETE FROM funcionesrol WHERE ID_FUNCIONES = _ID_FUNCIONES;
END //
DELIMITER ;


--
-- Estructura de tabla para la tabla `herramientas`
--

CREATE TABLE `herramientas` (
  `ID_HERRAMIENTA` int(11) NOT NULL,
  `NOMBRE` varchar(30) DEFAULT NULL,
  `ESTADO` varchar(10) DEFAULT NULL,
  `TIPO` varchar(10) DEFAULT NULL,
  `CANTIDAD` int(10) DEFAULT NULL,
  `ID_HORARIO` int(5) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

-- --------------------------------------------------------
DELIMITER //
CREATE PROCEDURE spFindAllHerramientas()
BEGIN
    SELECT ID_HERRAMIENTA, NOMBRE, ESTADO, TIPO, CANTIDAD, ID_HORARIO
    FROM herramientas;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spFindHerramientas(IN _ID_HERRAMIENTA INT)
BEGIN
    SELECT ID_HERRAMIENTA, NOMBRE, ESTADO, TIPO, CANTIDAD, ID_HORARIO
    FROM herramientas
    WHERE ID_HERRAMIENTA = _ID_HERRAMIENTA;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spInsertHerramientas(IN _ID_HERRAMIENTA INT, IN _NOMBRE VARCHAR(30), IN _ESTADO VARCHAR(10), IN _TIPO VARCHAR(10), IN _CANTIDAD INT, IN _ID_HORARIO INT)
BEGIN
    INSERT INTO herramientas (ID_HERRAMIENTA, NOMBRE, ESTADO, TIPO, CANTIDAD, ID_HORARIO)
    VALUES (_ID_HERRAMIENTA, _NOMBRE, _ESTADO, _TIPO, _CANTIDAD, _ID_HORARIO);
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spUpdateHerramientas(IN _ID_HERRAMIENTA INT, IN _NOMBRE VARCHAR(30), IN _ESTADO VARCHAR(10), IN _TIPO VARCHAR(10), IN _CANTIDAD INT, IN _ID_HORARIO INT)
BEGIN
    UPDATE herramientas
    SET NOMBRE = _NOMBRE, ESTADO = _ESTADO, TIPO = _TIPO, CANTIDAD = _CANTIDAD, ID_HORARIO = _ID_HORARIO
    WHERE ID_HERRAMIENTA = _ID_HERRAMIENTA;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spDeleteHerramientas(IN _ID_HERRAMIENTA INT)
BEGIN
    DELETE FROM herramientas WHERE ID_HERRAMIENTA = _ID_HERRAMIENTA;
END //
DELIMITER ;

--
-- Estructura de tabla para la tabla `horario`
--

CREATE TABLE `horario` (
  `ID_HORARIO` int(5) NOT NULL,
  `FECHA_HORA` datetime NOT NULL DEFAULT current_timestamp(),
  `TIEMPO_REQUERIDO` varchar(10) NOT NULL,
  `FECHA_REGISTRO` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

-- --------------------------------------------------------
DELIMITER //
CREATE PROCEDURE spFindAllHorario()
BEGIN
    SELECT ID_HORARIO, FECHA_HORA, TIEMPO_REQUERIDO, FECHA_REGISTRO
    FROM horario;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE spFindHorario(IN _ID_HORARIO INT)
BEGIN
    SELECT ID_HORARIO, FECHA_HORA, TIEMPO_REQUERIDO, FECHA_REGISTRO
    FROM horario
    WHERE ID_HORARIO = _ID_HORARIO;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spInsertHorario(IN _ID_HORARIO INT, IN _FECHA_HORA DATETIME, IN _TIEMPO_REQUERIDO VARCHAR(10), IN _FECHA_REGISTRO DATE)
BEGIN
    INSERT INTO horario (ID_HORARIO, FECHA_HORA, TIEMPO_REQUERIDO, FECHA_REGISTRO)
    VALUES (_ID_HORARIO, _FECHA_HORA, _TIEMPO_REQUERIDO, _FECHA_REGISTRO);
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spUpdateHorario(IN _ID_HORARIO INT, IN _FECHA_HORA DATETIME, IN _TIEMPO_REQUERIDO VARCHAR(10), IN _FECHA_REGISTRO DATE)
BEGIN
    UPDATE horario
    SET FECHA_HORA = _FECHA_HORA, TIEMPO_REQUERIDO = _TIEMPO_REQUERIDO, FECHA_REGISTRO = _FECHA_REGISTRO
    WHERE ID_HORARIO = _ID_HORARIO;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spDeleteHorario(IN _ID_HORARIO INT)
BEGIN
    DELETE FROM horario WHERE ID_HORARIO = _ID_HORARIO;
END //
DELIMITER ;

--
-- Estructura de tabla para la tabla `inventario`
--

CREATE TABLE `inventario` (
  `ID_INVENTARIO` int(11) NOT NULL,
  `ID_PC` int(11) DEFAULT NULL,
  `ID_HERRAMIENTA` int(11) DEFAULT NULL,
  `ID_AMBIENTES` int(11) DEFAULT NULL,
  `ID_HORARIO` int(11) DEFAULT NULL,
  `ID_MATERIAL` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

-- --------------------------------------------------------
DELIMITER //
CREATE PROCEDURE spFindAllInventario()
BEGIN
    SELECT ID_INVENTARIO, ID_PC, ID_HERRAMIENTA, ID_AMBIENTES, ID_HORARIO, ID_MATERIAL
    FROM inventario;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spFindInventario(IN _ID_INVENTARIO INT)
BEGIN
    SELECT ID_INVENTARIO, ID_PC, ID_HERRAMIENTA, ID_AMBIENTES, ID_HORARIO, ID_MATERIAL
    FROM inventario
    WHERE ID_INVENTARIO = _ID_INVENTARIO;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spInsertInventario(IN _ID_INVENTARIO INT, IN _ID_PC INT, IN _ID_HERRAMIENTA INT, IN _ID_AMBIENTES INT, IN _ID_HORARIO INT, IN _ID_MATERIAL INT)
BEGIN
    INSERT INTO inventario (ID_INVENTARIO, ID_PC, ID_HERRAMIENTA, ID_AMBIENTES, ID_HORARIO, ID_MATERIAL)
    VALUES (_ID_INVENTARIO, _ID_PC, _ID_HERRAMIENTA, _ID_AMBIENTES, _ID_HORARIO, _ID_MATERIAL);
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spUpdateInventario(IN _ID_INVENTARIO INT, IN _ID_PC INT, IN _ID_HERRAMIENTA INT, IN _ID_AMBIENTES INT, IN _ID_HORARIO INT, IN _ID_MATERIAL INT)
BEGIN
    UPDATE inventario
    SET ID_PC = _ID_PC, ID_HERRAMIENTA = _ID_HERRAMIENTA, ID_AMBIENTES = _ID_AMBIENTES, ID_HORARIO = _ID_HORARIO, ID_MATERIAL = _ID_MATERIAL
    WHERE ID_INVENTARIO = _ID_INVENTARIO;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spDeleteInventario(IN _ID_INVENTARIO INT)
BEGIN
    DELETE FROM inventario WHERE ID_INVENTARIO = _ID_INVENTARIO;
END //
DELIMITER ;

--
-- Estructura de tabla para la tabla `material`
--

CREATE TABLE `material` (
  `ID_MATERIAL` int(11) NOT NULL,
  `NOMBRE` varchar(30) DEFAULT NULL,
  `TIPO` varchar(30) DEFAULT NULL,
  `ESTADO` varchar(10) DEFAULT NULL,
  `CANTIDAD` varchar(10) DEFAULT NULL,
  `COLOR` varchar(10) DEFAULT NULL,
  `MEDIDA` varchar(10) DEFAULT NULL,
  `ID_HORARIO` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

-- --------------------------------------------------------
DELIMITER //

CREATE PROCEDURE spFindAllMaterial()
BEGIN
    SELECT ID_MATERIAL, NOMBRE, TIPO, ESTADO, CANTIDAD, COLOR, MEDIDA, ID_HORARIO
    FROM material;
END //

DELIMITER ;
DELIMITER //

CREATE PROCEDURE spFindMaterial(IN _ID_MATERIAL INT)
BEGIN
    SELECT ID_MATERIAL, NOMBRE, TIPO, ESTADO, CANTIDAD, COLOR, MEDIDA, ID_HORARIO
    FROM material
    WHERE ID_MATERIAL = _ID_MATERIAL;
END //

DELIMITER ;
DELIMITER //

CREATE PROCEDURE spInsertMaterial(
    IN _ID_MATERIAL INT,
    IN _NOMBRE VARCHAR(30),
    IN _TIPO VARCHAR(30),
    IN _ESTADO VARCHAR(10),
    IN _CANTIDAD VARCHAR(10),
    IN _COLOR VARCHAR(10),
    IN _MEDIDA VARCHAR(10),
    IN _ID_HORARIO INT
)
BEGIN
    INSERT INTO material (ID_MATERIAL, NOMBRE, TIPO, ESTADO, CANTIDAD, COLOR, MEDIDA, ID_HORARIO)
    VALUES (_ID_MATERIAL, _NOMBRE, _TIPO, _ESTADO, _CANTIDAD, _COLOR, _MEDIDA, _ID_HORARIO);
END //

DELIMITER ;
DELIMITER //

CREATE PROCEDURE spUpdateMaterial(
    IN _ID_MATERIAL INT,
    IN _NOMBRE VARCHAR(30),
    IN _TIPO VARCHAR(30),
    IN _ESTADO VARCHAR(10),
    IN _CANTIDAD VARCHAR(10),
    IN _COLOR VARCHAR(10),
    IN _MEDIDA VARCHAR(10),
    IN _ID_HORARIO INT
)
BEGIN
    UPDATE material
    SET NOMBRE = _NOMBRE, TIPO = _TIPO, ESTADO = _ESTADO, CANTIDAD = _CANTIDAD,
        COLOR = _COLOR, MEDIDA = _MEDIDA, ID_HORARIO = _ID_HORARIO
    WHERE ID_MATERIAL = _ID_MATERIAL;
END //

DELIMITER ;
DELIMITER //

CREATE PROCEDURE spDeleteMaterial(IN _ID_MATERIAL INT)
BEGIN
    DELETE FROM material
    WHERE ID_MATERIAL = _ID_MATERIAL;
END //

DELIMITER ;

--
-- Estructura de tabla para la tabla `registro`
--

CREATE TABLE `registro` (
  `ID_REGISTRO` int(100) NOT NULL,
  `NOMBRE` varchar(30) DEFAULT NULL,
  `APELLIDO` varchar(30) DEFAULT NULL,
  `TIPO_DOCUMENTO` varchar(2) DEFAULT NULL,
  `NUMERO_DOCUMENTO` int(20) DEFAULT NULL,
  `CORREO` varchar(30) DEFAULT NULL,
  `TELEFONO` varchar(12) DEFAULT NULL,
  `DIRECCION` varchar(30) DEFAULT NULL,
  `JORNADA` varchar(30) DEFAULT NULL,
  `PROGRAMA_FORMACION` varchar(100) DEFAULT NULL,
  `NUMERO_FICHA` int(15) DEFAULT NULL,
  `GENERO` varchar(10) DEFAULT NULL,
  `CONTRASENA` varchar(100) DEFAULT NULL,
  `ID_ROL` int(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

-- --------------------------------------------------------
DELIMITER //
CREATE PROCEDURE spFindAllRegistro()
BEGIN
    SELECT ID_REGISTRO, NOMBRE, APELLIDO, TIPO_DOCUMENTO, NUMERO_DOCUMENTO, CORREO, TELEFONO, DIRECCION, JORNADA, PROGRAMA_FORMACION, NUMERO_FICHA, GENERO, CONTRASENA, ID_ROL
    FROM registro;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE spFindRegistro(IN _ID_REGISTRO INT)
BEGIN
    SELECT ID_REGISTRO, NOMBRE, APELLIDO, TIPO_DOCUMENTO, NUMERO_DOCUMENTO, CORREO, TELEFONO, DIRECCION, JORNADA, PROGRAMA_FORMACION, NUMERO_FICHA, GENERO, CONTRASENA, ID_ROL
    FROM registro
    WHERE ID_REGISTRO = _ID_REGISTRO;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spInsertRegistro(IN _ID_REGISTRO INT, IN _NOMBRE VARCHAR(30), IN _APELLIDO VARCHAR(30), IN _TIPO_DOCUMENTO VARCHAR(2), IN _NUMERO_DOCUMENTO INT, IN _CORREO VARCHAR(30), IN _TELEFONO VARCHAR(12), IN _DIRECCION VARCHAR(30), IN _JORNADA VARCHAR(30), IN _PROGRAMA_FORMACION VARCHAR(100), IN _NUMERO_FICHA INT, IN _GENERO VARCHAR(10), IN _CONTRASENA VARCHAR(100), IN _ID_ROL INT)
BEGIN
    INSERT INTO registro (ID_REGISTRO, NOMBRE, APELLIDO, TIPO_DOCUMENTO, NUMERO_DOCUMENTO, CORREO, TELEFONO, DIRECCION, JORNADA, PROGRAMA_FORMACION, NUMERO_FICHA, GENERO, CONTRASENA, ID_ROL)
    VALUES (_ID_REGISTRO, _NOMBRE, _APELLIDO, _TIPO_DOCUMENTO, _NUMERO_DOCUMENTO, _CORREO, _TELEFONO, _DIRECCION, _JORNADA, _PROGRAMA_FORMACION, _NUMERO_FICHA, _GENERO, _CONTRASENA, _ID_ROL);
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spUpdateRegistro(IN _ID_REGISTRO INT, IN _NOMBRE VARCHAR(30), IN _APELLIDO VARCHAR(30), IN _TIPO_DOCUMENTO VARCHAR(2), IN _NUMERO_DOCUMENTO INT, IN _CORREO VARCHAR(30), IN _TELEFONO VARCHAR(12), IN _DIRECCION VARCHAR(30), IN _JORNADA VARCHAR(30), IN _PROGRAMA_FORMACION VARCHAR(100), IN _NUMERO_FICHA INT, IN _GENERO VARCHAR(10), IN _CONTRASENA VARCHAR(100), IN _ID_ROL INT)
BEGIN
    UPDATE registro
    SET NOMBRE = _NOMBRE, APELLIDO = _APELLIDO, TIPO_DOCUMENTO = _TIPO_DOCUMENTO, NUMERO_DOCUMENTO = _NUMERO_DOCUMENTO, CORREO = _CORREO, TELEFONO = _TELEFONO, DIRECCION = _DIRECCION, JORNADA = _JORNADA, PROGRAMA_FORMACION = _PROGRAMA_FORMACION, NUMERO_FICHA = _NUMERO_FICHA, GENERO = _GENERO, CONTRASENA = _CONTRASENA, ID_ROL = _ID_ROL
    WHERE ID_REGISTRO = _ID_REGISTRO;
END //
DELIMITER ;
DELIMITER //
CREATE PROCEDURE spDeleteRegistro(IN _ID_REGISTRO INT)
BEGIN
    DELETE FROM registro WHERE ID_REGISTRO = _ID_REGISTRO;
END //
DELIMITER ;


--
-- Estructura de tabla para la tabla `rol`
--

CREATE TABLE `rol` (
  `ID_ROL` int(11) NOT NULL,
  `NOMBRE_ROL` varchar(100) DEFAULT NULL,
  `ESTADO` varchar(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

DELIMITER //

CREATE PROCEDURE spFindAllRol()
BEGIN
    SELECT ID_ROL, NOMBRE_ROL, ESTADO
    FROM rol;
END //

DELIMITER ;
DELIMITER //

CREATE PROCEDURE spFindRol(IN _ID_ROL INT)
BEGIN
    SELECT ID_ROL, NOMBRE_ROL, ESTADO
    FROM rol
    WHERE ID_ROL = _ID_ROL;
END //

DELIMITER ;
DELIMITER //

CREATE PROCEDURE spInsertRol(
    IN _ID_ROL INT,
    IN _NOMBRE_ROL VARCHAR(100),
    IN _ESTADO VARCHAR(11)
)
BEGIN
    INSERT INTO rol (ID_ROL, NOMBRE_ROL, ESTADO)
    VALUES (_ID_ROL, _NOMBRE_ROL, _ESTADO);
END //

DELIMITER ;
DELIMITER //

CREATE PROCEDURE spUpdateRol(
    IN _ID_ROL INT,
    IN _NOMBRE_ROL VARCHAR(100),
    IN _ESTADO VARCHAR(11)
)
BEGIN
    UPDATE rol
    SET NOMBRE_ROL = _NOMBRE_ROL, ESTADO = _ESTADO
    WHERE ID_ROL = _ID_ROL;
END //

DELIMITER ;
DELIMITER //

CREATE PROCEDURE spDeleteRol(IN _ID_ROL INT)
BEGIN
    DELETE FROM rol
    WHERE ID_ROL = _ID_ROL;
END //

DELIMITER ;
